name: docker-build-and-push
description: ""

inputs:
  bake-target:
    description: ""
    required: true
  platforms:
    description: ""
    required: true
  tag-suffix:
    description: ""
    required: true

runs:
  using: composite
  steps:
    - name: Check branch of workflow_dispatch
      if: ${{ github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main' }}
      run: |
        echo "workflow_dispatch is allowed only with the branch 'refs/heads/main', '${{ github.ref }}' is not allowed."
        exit 1
      shell: bash

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install jq
      run: |
        sudo apt-get -y update
        sudo apt-get -y install jq
      shell: bash

    # workflow_dispatch: date
    # scheduled: latest, date
    # tag: semver
    # (tmp) pull_request: pr-number
    - name: Set Docker tags
      id: set-docker-tags
      run: |
        tags=()
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          tags+=("{{date 'YYYYMMDD'}}")
        else
          tags+=("type=schedule,pattern=latest")
          tags+=("type=schedule,pattern={{date 'YYYYMMDD'}}")
          tags+=("type=semver,pattern={{version}}")
          tags+=("type=ref,event=pr")
        fi

        # Workaround for multiline strings
        # https://github.community/t/set-output-truncates-multiline-strings/16852
        tags_multiline=$(printf "%s\n" "${tags[@]}")
        tags_multiline="${tags_multiline//'%'/'%25'}"
        tags_multiline="${tags_multiline//$'\n'/'%0A'}"
        tags_multiline="${tags_multiline//$'\r'/'%0D'}"

        echo ::set-output name=tags::$tags_multiline
      shell: bash

    - name: Docker meta for foo
      id: meta-foo
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.bake-target }}
        tags: ${{ steps.set-docker-tags.outputs.tags }}
        bake-target: docker-metadata-action-foo
        flavor: |
          latest=false
          suffix=-foo${{ inputs.tag-suffix }}

    - name: Docker meta for bar
      id: meta-bar
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.bake-target }}
        tags: ${{ steps.set-docker-tags.outputs.tags }}
        bake-target: docker-metadata-action-bar
        flavor: |
          latest=false
          suffix=-bar${{ inputs.tag-suffix }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    # For https://github.com/docker/buildx/issues/756
    - name: Merge json files
      run: |
        jq -s ".[0] * .[1]" \
          "${{ steps.meta-foo.outputs.bake-file }}" \
          "${{ steps.meta-bar.outputs.bake-file }}" \
          > bake.json
      shell: bash

    - name: Build and push
      uses: docker/bake-action@v1
      with:
        push: true
        files: |
          docker-bake.hcl
          bake.json
        set: |
          *.platform=${{ inputs.platforms }}

    - name: Output published tags
      id: output-published-tags
      run: |
        echo ::set-output name=published-tags::$(jq ".target[].tags[]" < bake.json)
      shell: bash
